import discord
from discord.ext import commands
import logging
from dotenv import load_dotenv
import os
from datetime import datetime
from discord.ext import tasks

# ‡πÄ‡∏û‡∏¥‡πà‡∏° import ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Flask ‡πÅ‡∏•‡∏∞ threading
from flask import Flask
from threading import Thread

load_dotenv()
token = os.getenv('DISCORD_TOKEN')

handler = logging.FileHandler(filename='discord.log', encoding='utf-8', mode='w')

intents = discord.Intents.default()
intents.message_content = True
intents.members = True
intents.voice_states = True  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ on_voice_state_update

bot = commands.Bot(command_prefix='!', intents=intents)

user_join_status = {}

def create_daily_game_embed(user: discord.Member) -> discord.Embed:
    embed = discord.Embed(
        title="üéÆ Daily Activity Reminder",
        description=f"‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ {user.mention}!\n‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡πÉ‡∏ô‡πÄ‡∏Å‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö:",
        color=discord.Color.blue(),
        timestamp=datetime.utcnow()
    )
    
    # Wuthering Wave Section
    embed.add_field(
        name="üå¨Ô∏è Wuthering Wave",
        value=(
            "- ‡πÄ‡∏Ñ‡∏ß‡∏™‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô: ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö\n"
            "- ‡∏•‡∏á‡∏î‡∏±‡∏ô‡πÄ‡∏à‡∏µ‡πâ‡∏¢‡∏ô Daily Dungeon\n"
            "- ‡πÄ‡∏Å‡πá‡∏ö‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç\n"
            "- ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏≥‡∏Å‡∏±‡∏î"
        ),
        inline=False
    )
    
    # LOL Section
    embed.add_field(
        name="‚öîÔ∏è League of Legends",
        value=(
            "- ‡πÄ‡∏•‡πà‡∏ô‡πÇ‡∏´‡∏°‡∏î ARAM ‡∏´‡∏£‡∏∑‡∏≠ Ranked\n"
            "- ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô\n"
            "- ‡∏ù‡∏∂‡∏Å‡∏ã‡πâ‡∏≠‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏ä‡∏°‡πÄ‡∏õ‡∏µ‡πâ‡∏¢‡∏ô‡πÉ‡∏´‡∏°‡πà\n"
            "- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÅ‡∏•‡∏∞‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°"
        ),
        inline=False
    )
    
    # ‡∏£‡∏π‡∏õ‡πÄ‡∏Å‡∏° (‡πÉ‡∏™‡πà URL ‡∏£‡∏π‡∏õ‡∏à‡∏£‡∏¥‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
    embed.set_image(url="https://gamicsoft.sgp1.digitaloceanspaces.com/28581/conversions/QQ%E6%88%AA%E5%9B%BE20230415192317-big_thumb.jpg")
    
    embed.set_footer(text="‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏™‡∏ô‡∏∏‡∏Å‡πÅ‡∏•‡∏∞‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö üòä")
    embed.set_thumbnail(url=user.avatar.url if user.avatar else "")
    
    return embed

@bot.event
async def on_voice_state_update(user: discord.Member, before, after):
    if before.channel is None and after.channel is not None:
        user_id = user.id
        
        if user_id not in user_join_status:
            user_join_status[user_id] = True
            await user.send(embed=create_daily_game_embed(user))

@tasks.loop(hours=24)
async def reset_join_status():
    user_join_status.clear()
    print(f"[{datetime.utcnow()}] ‡∏•‡πâ‡∏≤‡∏á user_join_status ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
            
@bot.event
async def on_ready():
    print(f"Bot is ready: {bot.user.name}")

# --- ‡πÇ‡∏Ñ‡πâ‡∏î Flask ‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏•‡πá‡∏Å‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠ uptime ---
app = Flask('')

@app.route('/')
def home():
    return "Bot is running"

def run():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run)
    t.start()

# ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Å‡πà‡∏≠‡∏ô bot.run()
keep_alive()

bot.run(token, log_handler=handler, log_level=logging.DEBUG)
